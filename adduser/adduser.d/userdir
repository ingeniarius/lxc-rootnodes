#!/usr/bin/perl -l
#
# lxc-add userdir script
# Rootnode, http://rootnode.net
#
# Copyright (C) 2012 Marcin Hlybin
# All rights reserved.
#
# The script creates mandatory files in user's rootfs.

use warnings;
use strict;
use Readonly;
use File::Path qw(remove_tree);
use Smart::Comments;

# Configuration
Readonly my $TEMPLATE_DIR => '/lxc/template/user/rootfs/home/etc';
Readonly my $LXC_DIR      => '/lxc/user';

# Check paths
-d $TEMPLATE_DIR or die "\$TEMPLATE_DIR ($TEMPLATE_DIR) not found.\n";
-d $LXC_DIR      or die "\$LXC_DIR ($LXC_DIR) not found.\n";

# Get arguments
die "Uneven number of arguments." if @ARGV % 2;
my %arg = @ARGV;

# Mandatory arguments
my $uid       = $arg{uid}       or die "Uid not specified.";
my $user_name = $arg{user_name} or die "User name not specified";

# Check home directory
my $home_dir="$LXC_DIR/$user_name/rootfs/home/";
-d $home_dir or die "User directory not found ($home_dir)";

# Create user directory
my $user_dir="$home_dir/$user_name";
if (!-d $user_dir) {
	mkdir $user_dir, 0711       or die "Cannot create directory ($user_dir)";
	mkdir "$user_dir/etc", 0755 or die "Cannot create directory ($user_dir/etc)"; 
	chown $uid, $uid, $user_dir or die "Cannot change owner to $uid ($user_dir)";
} 

# Copy etc files
system("cp -pr $TEMPLATE_DIR $home_dir");
$? and die "Cannot copy etc files: $!\n";

# Remove log files
my $var_log_dir = "$LXC_DIR/$user_name/rootfs/home/var/log";
if (-d $var_log_dir) {
	system("rm -r $var_log_dir");
	$? and die "Cannot remove /var/log/directory: $!";
	#remove_tree($var_log_dir) or die "Cannot remove /var/log directory";
	mkdir $var_log_dir, 0755  or die "Cannot create /var/log directory";
	chown 0, 0, $var_log_dir  or die "Cannot change /var/log owner";
}

# Remove lost+found directory
my $lost_found_dir = "$LXC_DIR/$user_name/rootfs/home/lost+found";
if (-d $lost_found_dir) {
	remove_tree($lost_found_dir) or die "Cannot remove lost+found directory";
}

exit;
